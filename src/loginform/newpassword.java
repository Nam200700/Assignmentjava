/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loginform;

import java.security.Key;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;
import static loginform.forgot.userEmail;

/**
 *
 * @author ACER
 */
public class newpassword extends javax.swing.JFrame {

    /**
     * Creates new form newpassword
     */
    public newpassword() {
        initComponents();
        this.setLocationRelativeTo(this);
    }
    
    private static boolean updatePasswordInDB(String email, String newPassword) {
        String url = "jdbc:mysql://localhost:3306/assjava3";
        String user = "root";
        String password = "18102007";
        
        try (Connection conn = DriverManager.getConnection(url, user, password)) {
            String hashedPassword = encrypt(newPassword);
            String query = "UPDATE users SET password = ? WHERE email = ?";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, hashedPassword);
            pstmt.setString(2, email);
            
            return pstmt.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    private static final String SECRET_KEY = "MySecretKey12345";  // Khóa bí mật cho AES phải có độ dài 16 ký tự

// Hàm mã hóa AES
    public static String encrypt(String input) {
        try {
            // Tạo đối tượng khóa AES từ chuỗi khóa bí mật
            Key key = new SecretKeySpec(SECRET_KEY.getBytes(), "AES");

            // Khởi tạo đối tượng Cipher với thuật toán AES
            Cipher cipher = Cipher.getInstance("AES");

            // Thiết lập Cipher để mã hóa (ENCRYPT_MODE)
            cipher.init(Cipher.ENCRYPT_MODE, key);

            // Mã hóa dữ liệu đầu vào
            byte[] encryptedBytes = cipher.doFinal(input.getBytes());

            // Trả về dữ liệu đã mã hóa dưới dạng chuỗi Base64
            return Base64.getEncoder().encodeToString(encryptedBytes);
        } catch (Exception e) {
            // Nếu có lỗi trong quá trình mã hóa, ném ra một ngoại lệ với thông báo lỗi
            throw new RuntimeException("Error during AES encryption", e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnnewpassword = new javax.swing.JButton();
        txtnewpassword = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        lblback = new javax.swing.JLabel();
        btnout = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(132, 56, 220));

        btnnewpassword.setText("Đổi mật khẩu");
        btnnewpassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnnewpasswordMouseClicked(evt);
            }
        });

        txtnewpassword.setText("jPasswordField1");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nhập mật khẩu mới");

        lblback.setForeground(new java.awt.Color(255, 255, 255));
        lblback.setText("Back");

        btnout.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnout.setForeground(new java.awt.Color(255, 255, 255));
        btnout.setText("X");
        btnout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblback, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(54, 54, 54)
                                        .addComponent(txtnewpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(btnnewpassword)))
                        .addGap(0, 30, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnout, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnout)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtnewpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btnnewpassword)
                .addGap(10, 10, 10)
                .addComponent(lblback)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnnewpasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnnewpasswordMouseClicked
        String newPassword = new String(txtnewpassword.getPassword());
        if (updatePasswordInDB(userEmail, newPassword)) {
            JOptionPane.showMessageDialog(this, "Mật khẩu đã được thay đổi thành công!");
            login lg = new login();
            lg.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Lỗi cập nhật mật khẩu.");
        }
    }//GEN-LAST:event_btnnewpasswordMouseClicked

    private void btnoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnoutMouseClicked
        System.exit(0);
    }//GEN-LAST:event_btnoutMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnnewpassword;
    private javax.swing.JLabel btnout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblback;
    private javax.swing.JPasswordField txtnewpassword;
    // End of variables declaration//GEN-END:variables

}
